<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Clientes', 'erp');

/**
 * BaseClientes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $cod_clientes
 * @property string $nome
 * @property string $rg
 * @property string $cpf
 * @property string $email
 * @property string $status
 * @property string $estado
 * @property string $cidade
 * @property string $rua
 * @property string $numero
 * @property string $bairro
 * @property string $cep
 * @property string $complemento
 * @property Doctrine_Collection $Email
 * @property Doctrine_Collection $Os
 * @property Doctrine_Collection $Vendas
 * 
 * @method integer             getCodClientes()  Returns the current record's "cod_clientes" value
 * @method string              getNome()         Returns the current record's "nome" value
 * @method string              getRg()           Returns the current record's "rg" value
 * @method string              getCpf()          Returns the current record's "cpf" value
 * @method string              getEmail()        Returns the current record's "email" value
 * @method string              getStatus()       Returns the current record's "status" value
 * @method string              getEstado()       Returns the current record's "estado" value
 * @method string              getCidade()       Returns the current record's "cidade" value
 * @method string              getRua()          Returns the current record's "rua" value
 * @method string              getNumero()       Returns the current record's "numero" value
 * @method string              getBairro()       Returns the current record's "bairro" value
 * @method string              getCep()          Returns the current record's "cep" value
 * @method string              getComplemento()  Returns the current record's "complemento" value
 * @method Doctrine_Collection getEmail()        Returns the current record's "Email" collection
 * @method Doctrine_Collection getOs()           Returns the current record's "Os" collection
 * @method Doctrine_Collection getVendas()       Returns the current record's "Vendas" collection
 * @method Clientes            setCodClientes()  Sets the current record's "cod_clientes" value
 * @method Clientes            setNome()         Sets the current record's "nome" value
 * @method Clientes            setRg()           Sets the current record's "rg" value
 * @method Clientes            setCpf()          Sets the current record's "cpf" value
 * @method Clientes            setEmail()        Sets the current record's "email" value
 * @method Clientes            setStatus()       Sets the current record's "status" value
 * @method Clientes            setEstado()       Sets the current record's "estado" value
 * @method Clientes            setCidade()       Sets the current record's "cidade" value
 * @method Clientes            setRua()          Sets the current record's "rua" value
 * @method Clientes            setNumero()       Sets the current record's "numero" value
 * @method Clientes            setBairro()       Sets the current record's "bairro" value
 * @method Clientes            setCep()          Sets the current record's "cep" value
 * @method Clientes            setComplemento()  Sets the current record's "complemento" value
 * @method Clientes            setEmail()        Sets the current record's "Email" collection
 * @method Clientes            setOs()           Sets the current record's "Os" collection
 * @method Clientes            setVendas()       Sets the current record's "Vendas" collection
 * 
 * @package    tcc
 * @subpackage model
 * @author     Renato e Leo
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClientes extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('clientes');
        $this->hasColumn('cod_clientes', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nome', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('rg', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('cpf', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('email', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('status', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('estado', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('cidade', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('rua', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('numero', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('bairro', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('cep', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('complemento', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Email', array(
             'local' => 'cod_clientes',
             'foreign' => 'vod_cliente'));

        $this->hasMany('Os', array(
             'local' => 'cod_clientes',
             'foreign' => 'cod_cliente'));

        $this->hasMany('Vendas', array(
             'local' => 'cod_clientes',
             'foreign' => 'cod_cliente'));
    }
}