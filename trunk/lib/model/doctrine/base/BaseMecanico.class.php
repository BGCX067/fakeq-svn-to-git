<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Mecanico', 'erp');

/**
 * BaseMecanico
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $cod_mecanico
 * @property string $nome
 * @property string $expediente
 * @property string $status
 * @property float $produtividade
 * @property Doctrine_Collection $OsServicos
 * 
 * @method integer             getCodMecanico()   Returns the current record's "cod_mecanico" value
 * @method string              getNome()          Returns the current record's "nome" value
 * @method string              getExpediente()    Returns the current record's "expediente" value
 * @method string              getStatus()        Returns the current record's "status" value
 * @method float               getProdutividade() Returns the current record's "produtividade" value
 * @method Doctrine_Collection getOsServicos()    Returns the current record's "OsServicos" collection
 * @method Mecanico            setCodMecanico()   Sets the current record's "cod_mecanico" value
 * @method Mecanico            setNome()          Sets the current record's "nome" value
 * @method Mecanico            setExpediente()    Sets the current record's "expediente" value
 * @method Mecanico            setStatus()        Sets the current record's "status" value
 * @method Mecanico            setProdutividade() Sets the current record's "produtividade" value
 * @method Mecanico            setOsServicos()    Sets the current record's "OsServicos" collection
 * 
 * @package    tcc
 * @subpackage model
 * @author     Renato e Leo
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMecanico extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mecanico');
        $this->hasColumn('cod_mecanico', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nome', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('expediente', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('status', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('produtividade', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('OsServicos', array(
             'local' => 'cod_mecanico',
             'foreign' => 'cod_mecanico'));
    }
}